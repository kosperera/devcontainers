{
	"name": "C# (.NET)",
	"image": "mcr.microsoft.com/vscode/devcontainers/base:dev-bullseye",

    "workspaceMount": "src=${localWorkspaceFolder},dst=/workspace,type=bind,consistency=cached",
    "workspaceFolder": "/workspace",
	
	"containerEnv":{
		"ASPNETCORE_URLS": "https://+:5001;http://+:5000",
      	"ASPNETCORE_ENVIRONMENT": "Development",
      	"DOTNET_CLI_TELEMETRY_OPTOUT": 1,
      	"DOTNET_NOLOGO": 1,
	},

	"features": {
		"common": {
			"username": "automatic",
			"uid": "automatic",
			"gid": "automatic",
			"installZsh": true,
			"upgradePackages": true,
		},
		"dotnet": {
			"version": "6.0",
      		"runtimeOnly": false
		},
		"node": {
			"version": "none",
        	"nodeGypDependencies": true,
		},
		"github-cli": "latest",
		"azure-cli": "latest"
	},
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"files.associations": {
			"**/ci/*.yml": "azure-pipelines"
		},
		"omnisharp.enableAsyncCompletion": true,
		"omnisharp.enableImportCompletion": true,
		"omnisharp.enableRoslynAnalyzers": true,
    	"omnisharp.organizeImportsOnFormat": true,
		"omnisharp.useEditorFormattingSettings": true,
		"omnisharp.useModernNet": true,

		"razor.disabled": true,

		"terminal.integrated.defaultProfile.linux": "zsh",
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"visualstudioexptteam.vscodeintellicode",
		"VisualStudioExptTeam.vscodeintellicode-completions",
		"ms-dotnettools.csharp",
		"ms-dotnettools.vscode-dotnet-runtime",
		"ms-edgedevtools.vscode-edge-devtools",
		
		"humao.rest-client",
		
		"ms-vscode.azurecli",
		"ms-azure-devops.azure-pipelines",
		"ms-azuretools.vscode-azureresourcegroups",
		"ms-azuretools.vscode-azureappservice",
		"ms-azuretools.vscode-azurevirtualmachines",

		"ms-dotnettools.dotnet-interactive-vscode",

		"ms-vscode.wordcount",
		"editorconfig.editorconfig",
		"esbenp.prettier-vscode",
		"streetsidesoftware.code-spell-checker",
		"redhat.fabric8-analytics",
		"redhat.vscode-yaml",
		"bierner.github-markdown-preview",
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [5000, 5001],

	// [Optional] To reuse of your local HTTPS dev cert:
	//
	// 1. Export it locally using this command:
	//    * Windows PowerShell:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//    * macOS/Linux terminal:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	// 
	// 2. Uncomment these 'remoteEnv' lines:
	//    "remoteEnv": {
	// 	      "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
	//        "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",
	//    },
	//
	// 3. Do one of the following depending on your scenario:
	//    * When using GitHub Codespaces and/or Remote - Containers:
	//      1. Start the container
	//      2. Drag ~/.aspnet/https/aspnetapp.pfx into the root of the file explorer
	//      3. Open a terminal in VS Code and run "mkdir -p /home/vscode/.aspnet/https && mv aspnetapp.pfx /home/vscode/.aspnet/https"
	//
	//    * If only using Remote - Containers with a local container, uncomment this line instead:
	//      "mounts": [ "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind" ],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "zsh .devcontainer/post-create.zsh",
	// Uncomment to indicates whether VS Code should stop the containers when the VS Code window is closed / shut down. Values are "none" and "stopCompose" (default).
	"shutdownAction": "stopCompose",

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
